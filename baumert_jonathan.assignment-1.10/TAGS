
heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

character.cpp,590
void character_delete(9,117
int16_t *character_get_pos(character_get_pos14,170
int16_t character_get_y(19,238
int16_t character_set_y(24,316
int16_t character_get_x(29,403
int16_t character_set_x(34,481
void character_die(39,568
int character_is_alive(44,622
char character_get_symbol(49,689
uint32_t character_get_speed(54,760
uint32_t character_get_dkills(59,833
uint32_t character_get_ikills(64,920
uint32_t character_increment_dkills(69,1008
uint32_t character_increment_ikills(74,1097
const char *character_get_name(character_get_name79,1202
uint32_t can_see(84,1276

descriptions.cpp,2861
#define MONSTER_FILE_SEMANTIC 20,336
#define MONSTER_FILE_VERSION 21,404
#define NUM_MONSTER_DESCRIPTION_FIELDS 22,446
#define OBJECT_FILE_SEMANTIC 23,487
#define OBJECT_FILE_VERSION 24,554
#define NUM_OBJECT_DESCRIPTION_FIELDS 25,596
  const char *name;name28,661
  const uint32_t value;29,681
} abilities_lookup[abilities_lookup30,705
#define color_lu_entry(51,1605
  const char *name;name53,1683
  const uint32_t value;54,1703
} colors_lookup[colors_lookup55,1727
#define type_lu_entry(71,2214
  const char *name;name73,2290
  const object_type_t value;74,2310
} types_lookup[types_lookup75,2339
const char object_symbol[object_symbol98,2857
static inline void eat_whitespace(121,3447
static inline void eat_blankspace(128,3553
static uint32_t parse_name(135,3659
static uint32_t parse_monster_name(159,4368
static uint32_t parse_monster_symb(166,4580
static uint32_t parse_integer(188,4929
static uint32_t parse_monster_rrty(209,5279
static uint32_t parse_color(216,5495
static uint32_t parse_monster_color(253,6070
static uint32_t parse_desc(292,6727
static uint32_t parse_monster_desc(333,7462
typedef uint32_t (*dice_parser_func_t)dice_parser_func_t340,7674
static uint32_t parse_dice(344,7846
static dice_parser_func_t parse_monster_speed 370,8273
static dice_parser_func_t parse_monster_dam 371,8333
static dice_parser_func_t parse_monster_hp 372,8391
static uint32_t parse_monster_abil(374,8449
static uint32_t parse_monster_description(411,9130
static uint32_t parse_object_name(546,13952
static uint32_t parse_object_art(554,14162
static uint32_t parse_object_rrty(573,14552
static uint32_t parse_object_desc(580,14765
static uint32_t parse_object_type(587,14974
static uint32_t parse_object_color(624,15575
static dice_parser_func_t parse_object_hit 631,15787
static dice_parser_func_t parse_object_dam 632,15844
static dice_parser_func_t parse_object_dodge 633,15901
static dice_parser_func_t parse_object_def 634,15960
static dice_parser_func_t parse_object_weight 635,16017
static dice_parser_func_t parse_object_speed 636,16077
static dice_parser_func_t parse_object_attr 637,16136
static dice_parser_func_t parse_object_val 638,16194
static uint32_t parse_object_description(640,16252
static uint32_t parse_monster_descriptions(820,23019
static uint32_t parse_object_descriptions(850,23821
uint32_t parse_descriptions(880,24615
uint32_t print_descriptions(919,25282
void monster_description::set(set938,25738
std::ostream &monster_description::print(print959,26471
std::ostream &operator<<(operator<<993,27348
uint32_t destroy_descriptions(998,27440
void object_description::set(set1006,27569
std::ostream &object_description::print(print1037,28623
std::ostream &operator<<(operator<<1062,29337
npc *monster_description::generate_monster(generate_monster1067,29430

dice.cpp,114
int32_t dice::roll(roll6,58
std::ostream &dice::print(print22,257
std::ostream &operator<<(operator<<27,358

dungeon.cpp,1379
#define DUMP_HARDNESS_IMAGES 18,290
typedef struct corridor_path 20,322
  heap_node_t *hn;hn21,353
  uint8_t pos[pos22,372
  uint8_t from[from23,390
  int32_t cost;24,409
} corridor_path_t;25,425
static uint32_t adjacent_to_room(27,445
static uint32_t is_open_space(35,704
static int32_t corridor_path_cmp(40,801
static void dijkstra_corridor(44,951
static void dijkstra_corridor_inv(143,4705
#define hardnesspair_inv(196,6044
static int connect_two_rooms(246,8715
static int create_cycle(265,9365
static int connect_rooms(307,10929
int gaussian[gaussian320,11120
typedef struct queue_node 328,11276
  int x,329,11304
  int x, y;329,11304
  struct queue_node *next;next330,11316
} queue_node_t;331,11343
static int smooth_hardness(333,11360
static int empty_dungeon(492,15797
static int place_rooms(514,16216
static void place_stairs(551,17401
static int make_rooms(573,18034
int gen_dungeon(596,18604
void delete_dungeon(609,18764
void init_dungeon(617,18926
int write_dungeon_map(626,19183
int write_rooms(639,19410
uint32_t calculate_dungeon_size(659,19827
int write_dungeon(666,20072
int read_dungeon_map(738,21754
int read_rooms(761,22350
int calculate_num_rooms(815,24164
int read_dungeon(823,24404
int read_pgm(905,26366
void render_hardness_map(990,28778
void render_movement_cost_map(1013,29303
void new_dungeon(1035,29808

event.cpp,174
static uint32_t next_event_number(4,43
int32_t compare_events(14,369
event *new_event(new_event25,681
event *update_event(update_event42,975
void event_delete(50,1117

io.cpp,1769
character *target;target14,226
static dungeon *thedungeon;thedungeon16,283
typedef struct io_message 18,312
  char msg[msg21,493
  struct io_message *next;next22,509
} io_message_t;23,536
static io_message_t *io_head,io_head25,553
static io_message_t *io_head, *io_tail;io_tail25,553
void io_init_terminal(27,594
void io_reset_terminal(45,1093
void io_queue_message(57,1253
static void io_print_message_queue(83,1660
void io_display_tunnel(103,2136
void io_display_distance(121,2544
static char hardness_to_char[hardness_to_char139,2945
void io_display_hardness(142,3047
static void io_redisplay_visible_monsters(162,3876
static int compare_monster_distance(281,9806
static character *io_nearest_visible_monster(io_nearest_visible_monster292,10240
void io_display(324,10976
static void io_redisplay_non_terrain(431,14808
void io_display_no_fog(466,16185
void io_display_monster_list(541,18518
uint32_t io_teleport_pc(550,18714
static const char *adjectives[adjectives708,22459
static void io_scroll_monster_list(741,23241
static bool is_vowel(770,23694
static void io_list_monsters_display(776,23873
static void io_list_monsters(842,26490
void io_display_ch(872,27255
void io_object_to_string(882,27479
uint32_t io_wear_eq(893,27764
void io_display_in(948,29269
uint32_t io_remove_eq(968,29615
void io_display_eq(1018,30816
uint32_t io_drop_in(1038,31216
static uint32_t io_display_obj_info(1088,32382
static uint32_t io_inspect_in(1124,32968
static uint32_t io_inspect_monster(1178,34201
static uint32_t io_target_monster(1370,39010
uint32_t io_ranged_attack(1544,43270
uint32_t io_poison_attack(1578,44167
static uint32_t io_inspect_eq(1607,44883
uint32_t io_expunge_in(1660,46098
void io_handle_input(1716,47587

move.cpp,306
void do_ranged_attack(20,303
void do_poison_attack(47,1195
void do_combat(104,3145
void move_character(228,6440
void do_moves(330,10086
void dir_nearest_wall(417,12661
uint32_t against_wall(429,13072
uint32_t in_corner(441,13556
static void new_dungeon_level(459,14180
uint32_t move_pc(482,14784

npc.cpp,1839
static uint32_t max_monster_cells(12,173
void gen_monsters(26,418
void npc_next_pos_rand_tunnel(42,708
    uint32_t i;46,795
    uint8_t a[a47,811
void npc_next_pos_rand(87,1557
    uint32_t i;91,1637
    uint8_t a[a92,1653
void npc_next_pos_rand_pass(119,2112
    uint32_t i;123,2203
    uint8_t a[a124,2219
void npc_next_pos_line_of_sight(151,2688
void npc_next_pos_line_of_sight_tunnel(180,3535
void npc_next_pos_gradient(215,4346
static void npc_next_pos_00(338,9023
static void npc_next_pos_01(350,9445
static void npc_next_pos_02(368,10070
static void npc_next_pos_03(376,10362
static void npc_next_pos_04(382,10527
static void npc_next_pos_05(394,10956
static void npc_next_pos_06(412,11588
static void npc_next_pos_07(420,11887
static void npc_next_pos_08(426,12052
static void npc_next_pos_09(436,12283
static void npc_next_pos_0a(446,12514
static void npc_next_pos_0b(456,12745
static void npc_next_pos_0c(466,12976
static void npc_next_pos_0d(476,13214
static void npc_next_pos_0e(486,13452
static void npc_next_pos_0f(496,13690
static void npc_next_pos_10(506,13928
static void npc_next_pos_11(511,14025
static void npc_next_pos_12(529,14661
static void npc_next_pos_13(537,14964
static void npc_next_pos_14(545,15267
static void npc_next_pos_15(557,15705
static void npc_next_pos_16(562,15802
static void npc_next_pos_17(570,16105
static void npc_next_pos_18(578,16408
static void npc_next_pos_19(588,16655
static void npc_next_pos_1a(598,16902
static void npc_next_pos_1b(608,17149
static void npc_next_pos_1c(618,17396
static void npc_next_pos_1d(628,17643
static void npc_next_pos_1e(638,17890
static void npc_next_pos_1f(648,18137
void npc_next_pos(697,19329
uint32_t dungeon_has_npcs(705,19520
npc::npc(710,19589
npc::~npc(~npc749,20751
bool boss_is_alive(758,20831

object.cpp,723
object::object(8,99
object::~object(~object31,640
void gen_object(39,714
void gen_objects(67,1519
char object::get_symbol(get_symbol80,1713
uint32_t object::get_color(get_color85,1787
const char *object::get_name(get_name90,1837
int32_t object::get_speed(get_speed95,1896
int32_t object::roll_dice(roll_dice100,1945
void destroy_objects(105,2002
int32_t object::get_type(get_type119,2240
uint32_t object::is_equipable(is_equipable124,2287
uint32_t object::is_removable(is_removable129,2382
uint32_t object::is_dropable(is_dropable134,2431
uint32_t object::is_destructable(is_destructable139,2479
int32_t object::get_eq_slot_index(get_eq_slot_index144,2531
void object::to_pile(to_pile154,2671

path.cpp,306
static dungeon *thedungeon;thedungeon13,649
typedef struct path 15,678
  heap_node_t *hn;hn16,700
  uint8_t pos[pos17,719
} path_t;18,737
static int32_t dist_cmp(20,748
static int32_t tunnel_cmp(27,1114
void dijkstra(34,1472
#define tunnel_movement_cost(144,5978
void dijkstra_tunnel(147,6070

pc.cpp,921
const char *eq_slot_name[eq_slot_name13,189
pc::pc(pc28,378
pc::~pc(~pc43,539
uint32_t pc_is_alive(62,787
void place_pc(67,857
void config_pc(82,1367
uint32_t pc_next_pos(108,1927
uint32_t pc_in_room(206,5986
void pc_learn_terrain(221,6535
void pc_reset_visibility(227,6691
terrain_type pc_learned_terrain(238,6858
void pc_init_known_terrain(247,7095
void pc_observe_terrain(259,7308
int32_t is_illuminated(296,8313
void pc_see_object(301,8397
void pc::recalculate_speed(recalculate_speed308,8490
uint32_t pc::wear_in(wear_in323,8693
uint32_t pc::has_open_inventory_slot(has_open_inventory_slot353,9328
int32_t pc::get_first_open_inventory_slot(get_first_open_inventory_slot366,9479
uint32_t pc::remove_eq(remove_eq379,9636
uint32_t pc::drop_in(drop_in401,10103
uint32_t pc::destroy_in(destroy_in415,10347
uint32_t pc::pick_up(pick_up437,10791
object *pc::from_pile(from_pile459,11369

rlg327.cpp,115
const char *victory victory15,224
const char *tombstone tombstone46,1795
void usage(67,2846
int main(78,3132

utils.cpp,25
int makedirectory(9,124

character.h,565
# define CHARACTER_H2,20
typedef enum kill_type 11,143
  kill_direct,12,168
  kill_avenged,13,183
  num_kill_types14,199
} kill_type_t;15,216
class character 19,245
  virtual ~character(21,272
  char symbol;22,298
  pair_t position;23,313
  int32_t speed;24,332
  uint32_t alive;25,349
  std::vector<uint32_t> color;26,367
  uint32_t hp;27,398
  const dice *damage;damage28,413
  const char *name;name29,435
  uint32_t sequence_number;37,1002
  uint32_t kills[kills38,1030
  inline uint32_t get_color(39,1064
  inline char get_symbol(40,1145

descriptions.h,2699
# define DESCRIPTIONS_H2,23
typedef enum object_type 15,271
  objtype_no_type,16,298
  objtype_WEAPON,17,317
  objtype_OFFHAND,18,335
  objtype_RANGED,19,354
  objtype_LIGHT,20,372
  objtype_ARMOR,21,389
  objtype_HELMET,22,406
  objtype_CLOAK,23,424
  objtype_GLOVES,24,441
  objtype_BOOTS,25,459
  objtype_AMULET,26,476
  objtype_RING,27,494
  objtype_SCROLL,28,510
  objtype_BOOK,29,528
  objtype_FLASK,30,544
  objtype_GOLD,31,561
  objtype_AMMUNITION,32,577
  objtype_FOOD,33,599
  objtype_WAND,34,615
  objtype_CONTAINER35,631
} object_type_t;36,651
class monster_description 41,716
  std::string name,43,754
  std::string name, description;43,754
  char symbol;44,787
  std::vector<uint32_t> color;45,802
  uint32_t abilities;46,833
  dice speed,47,855
  dice speed, hitpoints,47,855
  dice speed, hitpoints, damage;47,855
  uint32_t rarity;48,888
  uint32_t num_alive,49,907
  uint32_t num_alive, num_killed;49,907
  inline bool can_be_generated(50,941
  inline bool pass_rarity_roll(55,1089
  monster_description(61,1187
  char get_symbol(76,1779
  inline void birth(78,1862
  inline void die(82,1909
  inline void destroy(87,1972
class object_description 95,2080
  std::string name,97,2117
  std::string name, description;97,2117
  object_type_t type;98,2150
  uint32_t color;99,2172
  dice hit,100,2190
  dice hit, damage,100,2190
  dice hit, damage, dodge,100,2190
  dice hit, damage, dodge, defence,100,2190
  dice hit, damage, dodge, defence, weight,100,2190
  dice hit, damage, dodge, defence, weight, speed,100,2190
  dice hit, damage, dodge, defence, weight, speed, attribute,100,2190
  dice hit, damage, dodge, defence, weight, speed, attribute, value;100,2190
  bool artifact;101,2259
  uint32_t rarity;102,2276
  uint32_t num_generated;103,2295
  uint32_t num_found;104,2321
  object_description(106,2352
  inline bool can_be_generated(114,2725
  inline bool pass_rarity_roll(118,2834
  inline const std::string &get_name(get_name139,3547
  inline const std::string &get_description(get_description140,3609
  inline const object_type_t get_type(141,3685
  inline const uint32_t get_color(142,3748
  inline const dice &get_hit(get_hit143,3808
  inline const dice &get_damage(get_damage144,3861
  inline const dice &get_dodge(get_dodge145,3920
  inline const dice &get_defence(get_defence146,3977
  inline const dice &get_weight(get_weight147,4038
  inline const dice &get_speed(get_speed148,4097
  inline const dice &get_attribute(get_attribute149,4154
  inline const dice &get_value(get_value150,4219
  inline void generate(151,4276
  inline void destroy(152,4322
  inline void find(153,4367

dice.h,375
# define DICE_H2,15
class dice 7,75
  int32_t base;9,98
  uint32_t number,10,114
  uint32_t number, sides;10,114
  dice(12,149
  dice(15,197
  inline void set(19,304
  inline void set_base(25,452
  inline void set_number(29,520
  inline void set_sides(33,597
  inline int32_t get_base(39,738
  inline int32_t get_number(43,797
  inline int32_t get_sides(47,860

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.h,2704
# define DUNGEON_H2,18
#define DUNGEON_X 10,149
#define DUNGEON_Y 11,183
#define MIN_ROOMS 12,217
#define MAX_ROOMS 13,250
#define ROOM_MIN_X 14,283
#define ROOM_MIN_Y 15,316
#define ROOM_MAX_X 16,349
#define ROOM_MAX_Y 17,383
#define PC_VISUAL_RANGE 18,416
#define NPC_VISUAL_RANGE 19,449
#define PC_SPEED 20,483
#define MAX_MONSTERS 21,517
#define MAX_OBJECTS 22,551
#define SAVE_DIR 23,585
#define DUNGEON_SAVE_FILE 24,626
#define DUNGEON_SAVE_SEMANTIC 25,667
#define DUNGEON_SAVE_VERSION 26,713
#define MONSTER_DESC_FILE 27,747
#define OBJECT_DESC_FILE 28,797
#define MAX_INVENTORY 29,846
#define mappair(31,881
#define mapxy(32,938
#define hardnesspair(33,973
#define hardnessxy(34,1040
#define charpair(35,1085
#define charxy(36,1153
#define objpair(37,1199
#define objxy(38,1259
enum __attribute__ ((__packed__)) terrain_type 40,1298
  ter_debug,41,1347
  ter_unknown,42,1360
  ter_wall,43,1375
  ter_wall_immutable,44,1387
  ter_floor,45,1409
  ter_floor_room,46,1422
  ter_floor_hall,47,1440
  ter_stairs,48,1458
  ter_stairs_up,49,1472
  ter_stairs_down50,1489
typedef struct room 53,1511
  pair_t position;54,1533
  pair_t size;55,1552
} room_t;56,1567
class dungeon 62,1614
 dungeon(64,1639
 dungeon() : num_rooms(0), rooms(0), map{ter_wall}, hardness{hardness64,1639
             pc_distance{pc_distance65,1704
             pc_distance{0}, pc_tunnel{pc_tunnel65,1704
             pc_distance{0}, pc_tunnel{0}, character_map{character_map65,1704
             pc_distance{0}, pc_tunnel{0}, character_map{0}, PC(65,1704
             num_monsters(66,1772
             num_monsters(0), max_monsters(66,1772
             num_monsters(0), max_monsters(0), character_sequence_number(66,1772
             time(67,1849
             time(0), is_new(67,1849
             time(0), is_new(0), quit(67,1849
             time(0), is_new(0), quit(0), monster_descriptions(67,1849
             object_descriptions(68,1915
  uint32_t num_rooms;69,1953
  room_t *rooms;rooms70,1975
  terrain_type map[map71,1992
  uint8_t hardness[hardness80,2643
  uint8_t pc_distance[pc_distance81,2685
  uint8_t pc_tunnel[pc_tunnel82,2730
  character *character_map[character_map83,2773
  object *objmap[objmap84,2823
  pc *PC;PC85,2863
  heap_t events;86,2873
  uint16_t num_monsters;87,2890
  uint16_t max_monsters;88,2915
  uint16_t num_objects;89,2940
  uint16_t max_objects;90,2964
  uint32_t character_sequence_number;91,2988
  uint32_t time;97,3412
  uint32_t is_new;98,3429
  uint32_t quit;99,3448
  std::vector<monster_description> monster_descriptions;100,3465
  std::vector<object_description> object_descriptions;101,3522

event.h,199
# define EVENT_H2,16
enum event_type 8,79
  event_character_turn,9,97
struct event 12,125
  event_type type;13,140
  uint32_t time;14,159
  uint32_t sequence;15,176
    character *c;c17,207

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,19
# define IO_H2,13

macros.h,619
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#   define free(118,6077
#  define swap(128,6429
# define memswap(135,6549
# define structdup(141,6677
# define datacmp(148,7061
#  define max2(159,7633
#  define min2(166,7809
#  define max 173,7985
#  define min 174,8004
#  define max3(176,8024
#  define min3(177,8066
# define frand(180,8135
# define structdup(187,8247

move.h,21
# define MOVE_H2,15

npc.h,1275
# define NPC_H2,14
# define NPC_SMART 9,96
# define NPC_TELEPATH 10,134
# define NPC_TUNNEL 11,172
# define NPC_ERRATIC 12,210
# define NPC_PASS_WALL 13,248
# define NPC_DESTROY_OBJ 14,286
# define NPC_PICKUP_OBJ 15,324
# define NPC_UNIQ 16,362
# define NPC_BOSS 17,400
# define NPC_BIT09 18,438
# define NPC_BIT10 19,476
# define NPC_BIT11 20,514
# define NPC_BIT12 21,552
# define NPC_BIT13 22,590
# define NPC_BIT14 23,628
# define NPC_BIT15 24,666
# define NPC_BIT16 25,704
# define NPC_BIT17 26,742
# define NPC_BIT18 27,780
# define NPC_BIT19 28,818
# define NPC_BIT20 29,856
# define NPC_BIT21 30,894
# define NPC_BIT22 31,932
# define NPC_BIT23 32,970
# define NPC_BIT24 33,1008
# define NPC_BIT25 34,1046
# define NPC_BIT26 35,1084
# define NPC_BIT27 36,1122
# define NPC_BIT28 37,1160
# define NPC_BIT29 38,1198
# define NPC_BIT30 39,1236
# define NPC_BIT31 40,1274
# define has_characteristic(42,1313
# define is_unique(44,1425
# define is_boss(45,1491
typedef uint32_t npc_characteristics_t;49,1584
class npc 51,1625
  npc_characteristics_t characteristics;55,1718
  uint32_t have_seen_pc;56,1759
  pair_t pc_last_known_position;57,1784
  const char *description;description58,1817
  monster_description &md;md59,1844

object.h,1098
# define OBJECT_H2,17
class object 9,103
  const std::string &name;name11,128
  const std::string &description;description12,155
  object_type_t type;13,189
  uint32_t color;14,211
  pair_t position;15,229
  const dice &damage;damage16,248
  int32_t hit,17,270
  int32_t hit, dodge,17,270
  int32_t hit, dodge, defence,17,270
  int32_t hit, dodge, defence, weight,17,270
  int32_t hit, dodge, defence, weight, speed,17,270
  int32_t hit, dodge, defence, weight, speed, attribute,17,270
  int32_t hit, dodge, defence, weight, speed, attribute, value;17,270
  bool seen;18,334
  object *next;next19,347
  object_description &od;od20,363
  inline int32_t get_damage_base(24,468
  inline int32_t get_damage_number(28,547
  inline int32_t get_damage_sides(32,630
  int32_t get_weight(41,828
  int32_t get_defense(42,867
  bool have_seen(44,930
  void has_been_seen(45,966
  int16_t *get_position(get_position46,1006
  void pick_up(47,1053
  inline object *get_next(get_next54,1271
  inline void set_next(55,1316
  const char *get_description(get_description56,1364

path.h,54
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32

pc.h,611
# define PC_H2,13
typedef enum eq_slot 10,116
  eq_slot_weapon,11,139
  eq_slot_offhand,12,157
  eq_slot_ranged,13,176
  eq_slot_light,14,194
  eq_slot_armor,15,211
  eq_slot_helmet,16,228
  eq_slot_cloak,17,246
  eq_slot_gloves,18,263
  eq_slot_boots,19,281
  eq_slot_amulet,20,298
  eq_slot_lring,21,316
  eq_slot_rring,22,333
  num_eq_slots23,350
} eq_slot_t;24,365
class pc 28,427
  int belly,35,630
  int belly, turn_count;35,630
  uint32_t mana;36,655
  object *eq[eq39,689
  object *in[in40,717
  terrain_type known_terrain[known_terrain47,936
  uint8_t visible[visible48,988

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
